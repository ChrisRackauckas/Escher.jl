#!/usr/bin/env julia
#!/home/shashi/code/julia/master/julia

using ArgParse
using Escher

include(Pkg.dir("Escher", "src", "cli", "serve.jl"))
include(Pkg.dir("Escher", "src", "cli", "compile.jl"))

main() = begin
    arg_settings = ArgParseSettings()
    @add_arg_table arg_settings begin
        "--serve"
            help = "Serve escher UI files"
            action = :store_true
        "--make"
            help = "Compile Escher UI files to HTML. Each file with a main function becomes a .html."
            action = :store_true
        "--port"
            help = "Port to run the HTTP server on"
            arg_type = Int
            default = 5555
        "--dir", "-d"
            help = "Path to serve from, defaults to `.' or when compiling, the output directory."
            arg_type = AbstractString
            default = ""
        "--base", "-b"
            help = "If the compiled files are being served from a subdirectory"
            arg_type = AbstractString
            default = ""
        "files"
            help = "Files to compile. Ignored in serve mode"
            nargs = '*'
            arg_type = AbstractString
    end

    parsed_args = parse_args(arg_settings)
    if parsed_args["serve"]
        escher_serve(parsed_args["port"], parsed_args["dir"])
    elseif parsed_args["make"]
        dir = parsed_args["dir"] == "" ? "build" : parsed_args["dir"]
        Any[escher_make(f, dir) for f in parsed_args["files"]]
    else # default to help
       ArgParse.show_help(arg_settings)
    end
end

main()
