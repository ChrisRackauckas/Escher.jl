#!/usr/bin/env julia
#
# Webapp
using Morsel
using Canvas

using Patchwork
using WebSockets
using Morsel
using CSP

app = Morsel.app()

route(app, GET | POST | PUT, "/") do req, res
    render("home.tpl", list_of_canvases)
end

route(app, GET | POST | PUT, "/canvas/(.*)+") do req, res
    render("canvas.tpl", canvas_object)
end

@async wsloop(pwd())
start(app, 8000)

export wsloop, zmqloop, handle

abstract Request

type Canvas
    title::String
    root::Elem
end

const canvases = CanvasIO[] # Canvases currently active

function new_canvas(title::String, elem=nothing)
    @async begin
        pids = addprocs(1)
        pid = pids[1]
        remotecall(pid, init_canvas)
    end
end

function wsloop(directory)
    @async while true
    end
end

